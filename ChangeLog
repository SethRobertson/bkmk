2002-02-20  James Tanis  <jtt@saint.sysdetect.com>

	* Make.variables (COPTDEBUG+): Allow users to turn off powerful
	optimazations which kind of confuse gcc and make debugging difficult.

2002-02-21  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.OpenBSD-2.9-pre (LT_LDFLAGS, COPTDEBUG): must override,
	update override values to work same as Make.variables definitions

2002-02-19  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production ($(BK_JAVA_JAR)): avoid emacs compile mode stack
	overflow on crazy long jar arguments

	* Make.targets (depend, dotdepend, .depend): automatically create
	.depend file for java help as it is necessary, not optional;
	coordinate generation of .depend file between various rules;
	automatically regenerate .depend file if Map.jhm files change
	(clean, nuke): remove generated java help .html files
	
2002-02-14  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production (jtest-%): don't make this phony, as it doesn't work

2002-02-07  James Tanis  <jtt@saint.sysdetect.com>

	* Make.variables (BK_LDS): Add math.

2002-02-06  larry ogrodnek  <ldog@sysdetect.com>

	* Make.targets: BK_WANT_C=false will disable all C targets.

	* configure.in: look for jhindexer (used by the help target).

2002-02-06  James Tanis  <jtt@winwood.sysdetect.com>

	* Make.targets ($(BK_INSTALLDOCDIR)/doxygen/Doxyfile): Make
	doxygen build man pages in the expected man3 directory.

2002-02-05  James Tanis  <jtt@saint.sysdetect.com>

	* Make.variables (COPTDEBUG+): Remove omit-frame-pointer if debug on. Kills gdb.

	* Make.targets: Provide mechanism for overriding default target.

	* Make.variables (LIBTOOL): make WANT_LIBTOOL, BK_WANT_LIBTOOL
	just to make it synch with other symbols

2002-02-01  Alexander Dupuy  <dupuy@sysdetect.com>

	* Makefile (config.status): rerun configure if acaux files change

	* acaux/ltmain.sh: propagate --quiet into recursive finish

	* Make.targets (install): use ${LIBTOOL_INSTALL}

	* Make.variables (LIBTOOL_INSTALL): turn on quiet to shut up libtool

	* aclocal.m4 (AC_DEPLIBS_CHECK_METHOD): dependant -> dependent

	* configure.in: look for java in /usr/java/jdk/bin

	* Make.variables (LT, LTCC, LTLD, LT_CFLAGS, LT_LDFLAGS, LT_M_LDFLAGS):
	improve WANT_LIBTOOL sophistication, work with insure, allow user
	to control libtool options

	* Make.production: use LT* variables

	* Make.OpenBSD-2.9-pre (LT_LDFLAGS): can't avoid version on OpenBSD

2002-01-31  Alexander Dupuy  <dupuy@sysdetect.com>

	* configure.in: use autoconf m4 style comments 

	* Make.production ($(filter %.la,$(BK_LARGE_LIB))): use rpath for
	non-module libtool libraries too

2002-01-30  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.targets (install): libtool alternate installation for LARGE_LIB,
	installation for LARGE_MODULE

	* Make.production: .o -> ${OBJEXT}, use ${LIBTOOL} for compilation
	(.SUFFIXES): add libtool/generic suffixes
	($(filter %.la,$(BK_LARGE_LIB))): build libtool versions of libraries
	($(BK_LARGE_MODULE)): build libtool dlopenable modules

	* Make.variables (BK_INSTALLRPATH): normalized absolute INSTALLLIBDIR
	(OBJEXT): object file extension [including .]
	(EXEEXT): executable file extension [if any, and including .]
	(WANT_LIBTOOL): set to false to disable libtool support entirely

	* Make.config.in (LIBTOOL, OBJEXT_CONFIG, EXEEXT_CONFIG): config vars

	* aclocal.m4: incorporated libtool.m4 from libtool 1.4.2

	* configure.in, Make.config.in: converted to use libtool

	* acaux/ltmain.sh: added from libtool 1.4.2

	* acaux/config.guess, acaux/config.sub: added from gnu.org master copy

2002-01-25  larry ogrodnek  <ldog@sysdetect.com>

	* configure: find buildhelp.
	
	* Make.config.in: add BUILDHELP.
	
	* Make.targets (default): add "help" if BK_WANT_JAVA,
	BK_JAVA_HELP, and BK_JAVA_HELP_LANG are defined.
	(depend): create help file dependencies if BK_WANT_JAVA,
	BK_JAVA_HELP and BK_JAVA_HELP_LANG are defined.
	(help): add help target to create user docs.

2002-01-24  Alexander Dupuy  <dupuy@sysdetect.com>

	* libbk_autoconf.h.in: add new #defines from updated configure

	* configure.in: use new macros from aclocal.m4

	* aclocal.m4: m4 macros for load-time init, sa_len, inet_pton

2002-01-23  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production ($(subst .class,.cl%ss,$(BK_JAVA_PKG_CLASS))):
	echo shortened version of javac command line to avoid overflowing
	emacs compile-mode regex parser
	(.PRECIOUS): fix to really avoid deleting JAVA symlinks, in part to
	avoid overflowing emacs compile mode regex parser

2002-01-19  Alexander Dupuy  <dupuy@sysdetect.com>

	* configure.in: check for strptime, gmtime_r, timegm

	* libbk_autoconf.h.in: add HAVE_XXX entries for various library funcs

2002-01-18  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.GNUmakefile: common parts of bkmk GNUmakefile adaptors

2002-01-15  Alexander Dupuy  <dupuy@sysdetect.com>

	* configure.in: set PATH_SEPARATOR in config header

	* libbk_autoconf.h.in (PATH_SEPARATOR): from autoconf
	(BK_PATH_SEPARATOR): from autoconf, except if MINGW32
	(BK_SYSPATH_SEPARATOR): hardcoded by system type

	* .cvsignore: ignore configure-generated temporary files

2002-01-11  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.variables (INSTALL_INCFLAGS): Cygwin install can't handle -p
	when desired mode is 444 [read-only] so omit -p on Cygwin
	
	* Make.bkvariables (BK_OSNAME): CYGWIN_98-4.10-1.3.5(0.47/3/2) ->
	CYGWIN-1.3

	* configure.in: check for inet_pton function indicating INET6 support

	* libbk_autoconf.h.in (HAVE_inet_pton): conditional test for HAVE_INET6

2002-01-09  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.variables (BK_BKJUNK): remove generated .jar files for clean

	* Makefile (%.status): always make OSFILE in bkmk, touch .timestamp

	* Make.bkvariables (BK_OSFILE): filename w/o path to pass to Makefile
	(BK_DUMMY): avoid running config.status after configure, only note
	ARCHITECTURE CHANGE if file exists with different contents

	* Make.production ($(BK_SIMPLE_INTERNALPROGS) $(BK_SIMPLE_PROGS)):
	build simple programs in separate compile and link steps for Insure++

	* Make.variables (USING_INSURE): INSIGHT -> INSURE

	* chcopy.pl: INSIGHT -> INSURE, also update copyright date, sysd email

	* Make.bkvariables (BK_DUMMY): only make neat when ${BKMK_OSFILE}
	exists and doesn't match current OS type

2002-01-07  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production ($(subst .class,.cl%ss,$(BK_JAVA_PKG_CLASS))):
	use $^ rather than $? to ensure that all .java files are compiled

	* Make.bkvariables (BK_DUMMY): tweak to not only clean, but re-run
	configure; also reformat massive ${shell} with \ for readability

	* configure: regenerated using current autoconf

	* Make.bkvariables: don't make clean in 3rd party packages
	generated using GNUmakefile and $(ARCH) subdirectory

2002-01-07  James Tanis  <jtt@sysdetect.com>

	* configure, Make.bkvariables, Makefile, Make.include, Make.production:
	Make clean when arch changes

2002-01-04  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.bkvariables (BK_DUMMY): don't bother with this for GNUmakefile
	controlled 3rd party modules; use ${BKMKOSFILE}, ${MAKE}; let Makefile
	generate the OS file if it runs configure
	
	* Make.include (BKMKOSFILE): file containing OS name

	* Make.production (.user-variable%): suppress rule chaining

	* Makefile (clean nuke): don't remove Make.config [was created anyhow]
	(.timestamp): only run configure if config.status out of date/missing
	[nuke, new configure script, different OS] and generate OS file here
	
	* Make.variables (INSTALL_LIBFLAGS): eliminate duplicate -p

	* acaux/install-sh: implement -p option now that we depend on it

2002-01-04  James Tanis  <jtt@sysdetect.com>

	* Make.bkvariables, Makefile, Make.targets: run configure when
	things get out of date, not on all cvs udpates

	* Make.variables: use -p in all installs

2002-01-04  Alexander Dupuy  <dupuy@sysdetect.com>

	* force: no longer needs to do anything; keep file to avoid errors

	* Make.targets (install): deal with VPATH of .a dependencies,
	avoid extra ${RANLIB} of libraries; only echo commands being executed

	* Make.variables (INSTALL_LIBFLAGS): preserve timestamps

	* Make.production ($(BK_LARGE_INTERNALPROG)): don't try to build
	this using ${AR}
	($(BK_LARGE_LIB)): use $^ [all dependencies] if target doesn't exist

2001-12-27  Alexander Dupuy  <dupuy@sysdetect.com>

	* configure.in, libbk_autoconf.h.in: also check netinet/if_ether.h

	* Make.variables (MAKE): don't define this as make - could be gmake

	* Make.OpenBSD-2.9-pre (OS_INCS,OS_LDS,OS_LIBS): add /usr/local, -lintl

	* libbk_autoconf.h.in: template for autoconf stuff; define BK_MINGW32

	* configure.in: check for <net/ethernet.h>, generate libbk_autoconf.h

	* Makefile (clean nuke): clean up libbk_autoconf.h

2001-12-21  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.variables (BK_JAVA_TESTCP): BK_JAVA_CPATH + junit.jar

	* Make.production ($(subst .class,.cl%ss,$(BK_JAVA_PKG_TCLASS))):
	use BK_JAVA_TESTCP
	($(subst .class,.cl%ss,$(BK_JAVA_PKG_TCLASS))): use BK_JAVA_TESTCP

2001-12-19  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.targets ($(BK_INSTALLDOCDIR)/doxygen/Doxyfile): exclude tests
	
	* Make.variables (BK_STDJUNK): clean up .inslog2

2001-12-14  Seth Robertson  <seth@yeah.baka.org>

	* Make.targets: BK_WANT_JAVA=false will disable all java
	targets

2001-12-11  Alexander Dupuy  <dupuy@sysdetect.com>

	* configure.in: look for dot in PATH, define HAVE_DOT accordingly

	* Make.config.in (HAVE_DOT): use autoconf definition

	* Make.targets ($(BK_INSTALLDOCDIR)/doxygen/Doxyfile): enable HAVE_DOT
	if autoconf finds it, exclude libpcap/glib/libclc
	
	* Make.variables (BK_JAVA_PNGS,BK_JAVA_IMAGES,BK_JAVA_PKG_IMAGES):
	add support for images in jar files [note - JAVA_AUX is deprecated]

	* Make.production (jtest-%): phony target to force jtest run on file
	($(BK_JAVADIR)/%): add support for images in jar files
	($(BK_JAVA_JAR)): add support for images in jar files

	* Make.targets (viewdox): use netscape remote, provide true URL
	($(BK_INSTALLDOCDIR)/doxygen/Doxyfile): exclude JAVA link tree

	* configure.in: add konqueror, mozilla to browser choices

2001-12-10  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.targets (doxygen): Add Java support

2001-12-06  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.variables (JTESTERR): use sed to format error lines for emacs

	* Make.targets (BK_SUBDIRRULE): keep going through subdirectories
	even after failure if -k specified

	* Make.production (%.rpt): use JTESTERR for -nogui error extraction
	(%.ctp): use BK_JAVA_CPATH for -cp

	* Make.variables (.PRECIOUS): add % to make %.ctp precious if
	jtest gui is used
	(BK_STDJUNK,BK_CLEANJUNK): get rid of *.err, *.rpt
	(JTESTERR): ignore *.err file if JTESTUI=true

2001-12-05  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.targets (jtest): new target, linked to test if java present

	* Make.production: add rule to create directories in dependiencies
	[if specified with trailing /.]; make various things .PRECIOUS;
	add Jtest productions to generate reports, errors

	* Make.variables (JTEST): path for jtest script
	(BK_JAVA_PKGDOT): Java package in com.sysdetect.* dotted format
	(JTESTOUT): GUI control, dependent on JTESTUI=true
	(BK_JAVA_JTEST): Jtest reports

	* Make.targets (BK_SUBDIRRULE): allow top-level [module] directories
	to be absent

	* force: CVS Update.prog script to run whenever bkmk or top-level
	cvs update performed [does make clean in bkmk]

2001-12-04  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production: use BK_JAVA_CPATH and CURDIR in Java rules

	* Make.variables (BK_JAVA_CPATH): BK_JAVA_CP after prefixing JAVA
	and conversion to appropriate system-specific PATH_SEPARATOR
	(CURDIR): normalized version of make's PWD

	* Make.config.in (PATH_SEPARATOR): get this from autoconf

2001-12-01  Zhi-Da Zhong  <zz@sysdetect.com>

	* Make.production (Repository): added BK_JAVA_CP to classpath

2001-11-30  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.variables (JAVACFLAGS): flags for javac
	(BK_JAVA_*): file list variables for Java production rules
	(BK_JAVA_ICLASS_TMP): can't use $(wildcard) for this--it doesn't
	see newly created files--so go back to $(shell echo)

	* Make.targets (test): compile Java test classes
	(.PHONY): add recent targets to list

	* Make.production (Make%,.depen%): prevent implicit rule recursion
	(.SUFFIXES): prevent implicit rule recursion for java/class/etc. files
	(BK_JAVA_*): move JAVA variables to Make.variables
	($(subst .class,.cl%ss,$(BK_JAVA_PKG_CLASS))): really make single
	javac invocation work, using multiple-target "pattern rules"
	($(BK_JAVA_JAR)): no longer depends on test classes

2001-11-29  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production: tweak internal class support so that wildcard
	expansion is done at jar time [after compiler has generated all
	internal .class files]; modify javac compilation rule to operate
	on all of BK_JAVA_SRC or BK_JAVA_TEST at once, which is much more
	efficient given the way the javac compiler works; use wildcard to
	find locale bundle files without needing Makefile support
	
2001-11-29  larry ogrodnek  <ldog@sysdetect.com>

	* Make.production (BK_JAVA_ICLASS): support for internal classes.

2001-11-28  James Tanis  <jtt@winwood.sysdetect.com>

	* Make.variables (COPTDEBUG+): Turn off optimization when INSIGHT
	on to "suppress" message indicating that INSIGHT is dropping
	optimizations :-)

2001-11-28  Alexander Dupuy  <dupuy@sysdetect.com>

	* ex.pkg.Make.preinclude (BK_INSTALLBASE): use this consistently
	instead of BK_INSTALLBASEDIR; GNUmakefiles modified to use this

	* Make.production: do better at linking files into JAVA directory
	tree on systems where symbolic links aren't fully supported

	* ex.pkg.Makefile (BK_LOCALCLEANJUNK): add JAVA directory

2001-11-27  Seth Robertson  <seth@startide.sysdetect.com>

	* Make.variables (COMPILER_DEBUG): Add missing-prototypes or
	strict-prototypes

2001-11-27  Matt Miller  <matt@sysdetect.com>

	* Make.{variables,targets}: force makefile-mode in emacs.

	* Make.variables: added *.class to BK_STDJUNK

2001-11-18  Seth Robertson  <seth@winwood.sysdetect.com>

	* Make.variables: USING_INSIGHT now working.

2001-11-13  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production: add -classpath $(BK_JAVADIR) to javac rule

2001-11-12  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production (BK_JAVA_PKG_LOCALE): locale resource bundle support
	(BK_JAVA_PKG_TCLASS): test class support
	(BK_JAVA_PKG_AUX): auxiliary file [image, etc.] support

2001-11-12  James Tanis  <jtt@winwood.sysdetect.com>

	* Make.variables: NO_OPT and NO_DEBUG now supported.

2001-11-09  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.production: tweaks to java jar building rules

	* Make.variables (ECHO): ECHO should be shell builtin

	* Make.config.in (PERL): find perl; don't look for echo program

	* configure.in: reordered by group; find perl; don't look for echo

	* configure: rebuilt with local copy of autoconf 2.52 for good LN_S

2001-11-08  Seth Robertson  <seth@startide.sysdetect.com>

	* Make.targets (doxygen): Modified doxygen target to nuke
	doxy-files to prevent stale files from lying around.

2001-11-08  Alexander Dupuy  <dupuy@sysdetect.com>

	* configure (LN_S): regenerated with newer autoconf 2.52; configure
	tweaked to avoid use of ln -s on cygwin [non-cygwin progs ignore .lnk]

	* configure.in: find java compiler and archiver, check for symbolic
	link support, avoid confusion between $PWD envar and pwd program,
	find IE browser on Windows platforms correctly

	* Make.config.in (JAVAC,JAR,LN_S,PWD): add java compiler and archiver,
	check for symbolic link support, avoid confusion between $PWD envar and
	pwd program

	* Make.production (BK_JAVA_*): add java build rules

	* Make.targets (install): add Java jar install target

	* Make.variables (JARFLAGS): default flags for jar'ing java classes

	* Make.bkvariables: spelling fixes, avoid BK_PKGNAME with space

	* ex.hints: spelling fixes
	
	* ex.pkg.Make.preinclude: renamed from ex.pkg.Make.preinstall

2001-11-06  James Tanis  <jtt@winwood.sysdetect.com>

	* Make.targets ($(BK_INSTALLDOCDIR)/doxygen/Doxyfile): Extract
	static functions too.

	* configure.in: Add a few more program checks.

	* Make.targets ($(BK_INSTALLDOCDIR)/doxygen/Doxyfile): Do doxygen
	stuff. 

2001-10-04  Alexander Dupuy  <dupuy@sysdetect.com>

	* Make.targets (install): use ${INSTALL_INCFLAGS} for ${BK_PUBLIC_INC}

	* Make.variables (INSTALL_INCFLAGS): install header files
	read-only to avoid editing them [and not originals]
	(INSTALL): removed--install doesn't always grok -c, and autoconf
	finds install with that semantics or uses install-sh shell script
	[so INSTALL from Make.config is always good enough]

	* Make.config.in (RM_CONFIG,MKDIR_CONFIG): eliminate duplicate -f,-p

2001-09-08  Seth Robertson  <seth@yeah.baka.org>

	* Make.targets (subtags): Only tag if we have targets.

	* Make.variables (ETAGS): Need tag commands

2001-09-07  Seth Robertson  <seth@yeah.baka.org>

	* Make.targets: Install need subdirrule in front of local targets
	as well.

2001-09-05  Seth Robertson  <seth@yeah.baka.org>

	* Make.targets (default): Build subdirectories before local targets.

2001-08-26  Seth Robertson  <seth@yeah.baka.org>

	* Make.variables: Working library vpath style
	* Make.production: New library dependency style
	* Make.include (BKMKDIR): Need to include dependancy information.

2001-07-05  Seth Robertson  <seth@yeah.baka.org>

	* Make.variables (MKDEP): Remove := immediate assignment to allow
	deferred configuration to work correctly.

2001-06-20  Seth Robertson  <seth@yeah.baka.org>

	* Make.bkvariables: Move autoconfigure stuff into Make.bkvariables which
	has once-only support and otherwise deals with arch stuff.

	* Make.variables: Support to use configured discovered compiler
	names and other programs.

	* Make.config.in: Don't define CC and CXX directly--there might be
	args.  This applies to RM, MKDIR and friends as well.
