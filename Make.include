# -*- makefile -*-
#
# $Id: Make.include,v 1.26 2003/03/26 16:46:05 jtt Exp $
#
# ++Copyright LIBBK++
#
# Copyright (c) 2001 The Authors.  All rights reserved.
#
# This source code is licensed to you under the terms of the file
# LICENSE.TXT in this release for further details.
#
# Mail <projectbaka@baka.org> for further information
#
# --Copyright LIBBK--
#
#
# General Baka makefile environment
#
BKMKDIR=$(GROUPTOP)/$(PKGTOP)/bkmk

# clear environment variables that cause problems with bash, ksh, POSIX sh
export CDPATH
CDPATH=
export ENV
ENV=

include $(BKMKDIR)/Make.bkvariables

ifneq ($(BK_USER_VARIABLES),)
include $(BK_USER_VARIABLES)
endif

-include $(BKMKDIR)/Make.$(BK_OSNAME)-pre
include $(BKMKDIR)/Make.config

#
# User configuration (from .user-variables or command line)
#
ifneq ($(strip $(WANT_JAVA)),)
BK_WANT_JAVA=$(WANT_JAVA)
endif

ifneq ($(strip $(WANT_C)),)
BK_WANT_C=$(WANT_C)
 endif

ifneq ($(strip $(WANT_LIBTOOL)),)
BK_WANT_LIBTOOL=$(WANT_LIBTOOL)
endif

ifneq ($(strip $(WANT_STATIC)),)
BK_WANT_STATIC=$(WANT_STATIC)
endif

ifneq ($(strip $(WANT_HELP)),)
BK_WANT_HELP=$(WANT_HELP)
endif

BK_USING_PTHREADS=false
ifeq ($(HAVE_PTHREADS),true)
ifneq ($(strip $(WANT_PTHREADS)),false)
BK_USING_PTHREADS=true
endif
endif

BK_USING_ORACLE=false
ifeq ($(strip $(WANT_ORACLE)),true)
ifeq ($(strip $(HAVE_ORACLE)),true)
ifeq ($(strip $(BK_USING_PTHREADS)),true)
BK_USING_ORACLE=true
endif
endif
endif

ifneq ($(strip $(WANT_POSTGRES)),)
BK_WANT_POSTGRES=$(WANT_POSTGRES)
endif

ifneq ($(findstring true,$(WANT_GPROF)$(USING_GPROF)),)
BK_USING_GPROF=true
override BK_USING_PROF=false
override BK_WANT_LIBTOOL=false
override BK_WANT_STATIC=false
else
ifneq ($(findstring true,$(WANT_PROF)$(USING_PROF)),)
BK_USING_PROF=true
override BK_USING_GPROF=false
endif
endif

ifneq ($(findstring true,$(WANT_INSURE)$(USING_INSURE)$(USING_INSIGHT)),)
BK_USING_INSURE=true
ifneq ($(findstring true,$(WANT_INSURE_DEBUG)$(USING_INSURE_DEBUG)$(USING_INSIGHT_DEBUG)),)
BK_USING_INSURE_DEBUG=true
endif
override BK_USING_DMALLOC=false
override BK_USING_BOUNDS_CHECKING=false
else
ifneq ($(findstring true,$(WANT_DMALLOC)$(USING_DMALLOC)),)
BK_USING_DMALLOC=true
override BK_USING_INSURE=false
override BK_USING_BOUNDS_CHECKING=false
else 
ifneq ($(findstring true,$(WANT_BOUNDS_CHECKING)$(USING_BOUNDS_CHECKING)),)
BK_USING_BOUNDS_CHECKING=true
override BK_USING_INSURE=false
override BK_USING_DMALLOC=false
endif
endif
endif

include $(BKMKDIR)/Make.variables
include $(BKMKDIR)/Make.targets
include $(BKMKDIR)/Make.production
-include $(BKMKDIR)/Make.$(BK_OSNAME)-post

-include .depend
