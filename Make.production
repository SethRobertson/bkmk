# $Id: Make.production,v 1.10 2001/11/29 21:44:53 ldog Exp $
#
# ++Copyright LIBBK++
#
# Copyright (c) 2001 The Authors.  All rights reserved.
#
# This source code is licensed to you under the terms of the file
# LICENSE.TXT in this release for further details.
#
# Mail <projectbaka@baka.org> for further information
#
# --Copyright LIBBK--
#
#
# Production rules--convert "source" to "targets"
#

#
# Standard compiling targets
#
%.o: %.c
	$(COMPILE.c) $(OUTPUT_OPTION) $<

%.i: %.c
	$(CC) -E $(CPPFLAGS) -o $@ $<

%.c: %.l
	$(LEX) $(LFLAGS) -t $< > $@

%.tab.c %.tab.h: %.y
	$(YACC) $(YFLAGS) $<

%.class: %.java
	$(JAVAC) -classpath $(BK_JAVADIR) $<

#
# Simple program production
#
$(BK_SIMPLE_INTERNALPROGS) $(BK_SIMPLE_PROGS): %: %.c $(filter -l%,$(BK_ALLLIBS))
	$(LINK.c) -o $@ $@.c $(LDLIBS)

#
# Larger program production
#
BK_LARGE_OBJ:=$(patsubst %.c,%.o,$(BK_LARGE_SRC))
BK_LARGE_OBJ:=$(patsubst %.y,%.tab.o,$(BK_LARGE_OBJ))
BK_LARGE_OBJ:=$(patsubst %.l,%.o,$(BK_LARGE_OBJ))

$(BK_LARGE_INTERNALPROG) $(BK_LARGE_PROG): $(BK_LARGE_OBJ) $(filter -l%,$(BK_ALLLIBS))
	$(LINK.c) -o $@ $(BK_LARGE_OBJ) $(LDLIBS)

#
# Large library production
#
BK_LARGE_LIBOBJ:=$(patsubst %.c,%.o,$(BK_LARGE_LIBSRC))
BK_LARGE_LIBOBJ:=$(patsubst %.y,%.tab.o,$(BK_LARGE_LIBOBJ))
BK_LARGE_LIBOBJ:=$(patsubst %.l,%.o,$(BK_LARGE_LIBOBJ))

$(BK_LARGE_INTERNALPROG) $(BK_LARGE_LIB): $(BK_LARGE_LIBOBJ)
	$(AR) $(ARFLAGS) $@ $?
	$(RANLIB) $@

#
# Java production
#
BK_JAVA_CLASS:=$(patsubst %.java,$(BK_JAVA_PKG)/%.class,$(BK_JAVA_SRC))
BK_JAVA_TCLASS:=$(patsubst %.java,$(BK_JAVA_PKG)/%.class,$(BK_JAVA_TEST))
BK_JAVA_ICLASS_T:=$(patsubst %.class, %\$$*, $(BK_JAVA_CLASS))
BK_JAVA_ICLASS:=$(foreach tmp, $(BK_JAVA_ICLASS_T), $(wildcard $(BK_JAVADIR)/$(tmp)))
BK_JAVA_ICLASS:=$(subst $$,\$$,$(patsubst $(BK_JAVADIR)/%,%,$(BK_JAVA_ICLASS)))
BK_JAVA_PKG_CLASS:=$(patsubst %,$(BK_JAVADIR)/%,$(BK_JAVA_CLASS))
BK_JAVA_PKG_TCLASS:=$(patsubst %,$(BK_JAVADIR)/%,$(BK_JAVA_TCLASS))
BK_JAVA_PKG_SRC:=$(patsubst %,$(BK_JAVADIR)/$(BK_JAVA_PKG)/%,$(BK_JAVA_SRC))
BK_JAVA_PKG_AUX:=$(patsubst %,$(BK_JAVADIR)/$(BK_JAVA_PKG)/%,$(BK_JAVA_AUX))
BK_JAVA_PKG_LOCALE:=$(patsubst %,$(BK_JAVADIR)/%,$(BK_JAVA_LOCALE))

BK_JAVA_MF:=$(patsubst %.jar,%.MF,$(BK_JAVA_JAR))

$(BK_JAVADIR)/$(BK_JAVA_PKG)/%: %
	$(LN_S) -f `$(PWD)`/$< $@
	@-test ! -L $@ && test ! $@ -ef $< 2>/dev/null && chmod -w $@

$(BK_JAVADIR)/%: $(GROUPTOP)/$(LOCALE)/%
	$(LN_S) -f `$(PWD)`/$< $@
	@-test ! -L $@ && test ! $@ -ef $< 2>/dev/null && chmod -w $@

$(BK_JAVADIR)/%.MF: %.MF
	$(LN_S) -f `$(PWD)`/$< $@
	@-test ! -L $@ && test ! $@ -ef $< 2>/dev/null && chmod -w $@

$(BK_JAVA_JAR): $(BK_JAVADIR)/$(BK_JAVA_PKG) $(BK_JAVADIR)/$(BK_JAVA_MF) \
		$(BK_JAVA_PKG_SRC) $(BK_JAVA_PKG_AUX) $(BK_JAVA_PKG_CLASS) \
		$(BK_JAVA_PKG_TCLASS) $(BK_JAVA_PKG_LOCALE)
	cd $(BK_JAVADIR) && \
	  $(JAR) $(JARFLAGS) $@ $(BK_JAVA_MF) $(BK_JAVA_CLASS) \
	  $(BK_JAVA_ICLASS) \
	    $(patsubst %,$(BK_JAVA_PKG)/%,$(BK_JAVA_AUX)) $(BK_JAVA_LOCALE)
	$(MV) $(BK_JAVADIR)/$(BK_JAVA_JAR) $@

$(BK_JAVADIR)/$(BK_JAVA_PKG):
	$(MKDIR) $(BK_JAVADIR)/$(BK_JAVA_PKG)

