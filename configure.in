dnl
dnl $Id: configure.in,v 1.93 2003/06/17 05:59:47 seth Exp $
dnl
dnl ++Copyright LIBBK++
dnl
dnl Copyright (c) 2003 The Authors. All rights reserved.
dnl
dnl This source code is licensed to you under the terms of the file
dnl LICENSE.TXT in this release for further details.
dnl
dnl Mail <projectbaka@baka.org> for further information
dnl
dnl --Copyright LIBBK--
dnl
dnl
dnl Autoconf configuration
dnl
AC_REVISION($Revision: 1.93 $)dnl
AC_INIT
AC_CONFIG_SRCDIR([Make.bkvariables])
AC_CONFIG_AUX_DIR(acaux)

echo
echo  "		CONFIGURING BAKA ENVIRONMENT"
echo

AC_PROG_CC

if test "$CC" "!=" "gcc"; then
  AC_MSG_WARN([Attempting to compile without gcc may be painful])
fi

AC_PROG_CXX
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_CPP
AC_PROG_CXXCPP
AC_PROG_CC_C_O
AC_PROG_AWK

AC_CHECK_LIB(ssl, SSL_CTX_new, HAVE_LIBSSL=true, HAVE_LIBSSL=false)
if test "$HAVE_LIBSSL" "=" "true"
then
  AC_DEFINE(HAVE_LIBSSL)
fi
AC_SUBST(HAVE_LIBSSL)

AC_C_ALIGN_FUNCTIONS

AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(long long)

if test "$ac_cv_prog_ac_ct_CC" = "gcc"
then
  # check for desired level of gcc warnings
  # <TODO>Should be implemented as a single AC_ macro in aclocal.m4</TODO>
  CFLAGS_OLD="$CFLAGS"
  CFLAGS="$CFLAGS -Werror -Wchar-subscripts"
  BK_C_OVERZEALOUS_CHAR_SUBSCRIPTS
  CFLAGS="$CFLAGS_OLD"

  echo $ECHO_N "checking for compiler warning flags... $ECHO_C" >&6
  SAVE_CFLAGS="$CFLAGS"
  CFLAGS="-W -Wunused -Wno-unused-parameter"
  AC_TRY_COMPILE(,,BK_SPECIAL_DEBUG="$CFLAGS",BK_SPECIAL_DEBUG="-W")
  AC_SUBST(BK_SPECIAL_DEBUG)
  CFLAGS="$SAVE_CFLAGS"
  echo "${ECHO_T}$BK_SPECIAL_DEBUG" >&6

  BK_C_SIG_BRAINDAMAGE
fi

# <TODO bugid="999">This macro doesn't work right when cross-compiling; it
# should be replaced by something that greps the generated object file.</TODO>
AC_C_BIGENDIAN

AC_PROG_INSTALL
AC_PROG_LN_S
AC_PATH_PROG(PAWD, pawd, '')

AC_LIBTOOL_WIN32_DLL
AC_LIBTOOL_DLOPEN
AC_ENABLE_PATHENV(first)
AC_PROG_LIBTOOL

AC_SUBST(lt_prog_compiler_static)

AC_C__FUNC__
AC_CONSTRUCTORS
AC_SYS_LARGEFILE
AC_CHECK_HEADERS(paths.h ieeefp.h alloca.h)
AC_CHECK_HEADERS(net/ethernet.h netinet/ether.h)
AC_CHECK_HEADERS(sys/capability.h)
AC_SA_LEN
AC_SOCKLEN_T
AC_IN_ADDR_T
AC_IN6_MULTICAST
AC_FUNC_INET_PTON

AC_FUNC_MKTIME
if test $ac_cv_func_working_mktime = no; then
  AC_DEFINE(MKTIME_HAS_BUGS)
fi
AC_TIME_MAX(BK_TIME_MAX)

AC_CHECK_TYPE(u_int8_t, uint8_t)
AC_CHECK_TYPE(u_int16_t, uint16_t)
AC_CHECK_TYPE(u_int32_t, uint32_t)
AC_CHECK_TYPE(u_int64_t, uint64_t)

AC_SEARCH_LIBS([aioread64],[aio])
AC_SEARCH_LIBS([socket],[socket])
AC_SEARCH_LIBS([gethostbyname],[resolv nsl])
AC_SEARCH_LIBS([inet_aton],[resolv nsl])

ACX_PTHREAD(
  [HAVE_PTHREADS=true
    AC_CHECK_HEADERS(pthread_np.h, [], [], [
     #include <pthread.h>
    ])
    AC_CHECK_FUNCS(pthread_kill_other_threads_np)
    AC_CHECK_FUNCS(pthread_set_name_np)],
  [HAVE_PTHREADS=false])
AC_SUBST(HAVE_PTHREADS)

dnl <TODO bugid="881">should use getaddressinfo function instead</TODO>>
AC_SEARCH_LIBS([gethostbyname2],[resolv],AC_DEFINE(HAVE_GETHOSTBYNAME2))

AC_CHECK_FUNCS(isinf ntohll)
AC_CHECK_FUNCS(memmem memrchr setenv strndup strnlen strverscmp strsignal)
AC_CHECK_FUNCS(strptime gmtime_r timegm)
AC_FUNC_STRFTIME
AC_FUNC_GETTEXT
AC_STACKDIRECTION
AC_FUNC_ALLOCA

AC_SECOND_CONNECT_TO_REFUSED_PORT(BK_SECOND_REFUSED_CONNECT_ERRNO)

AC_DEV_FD

# these are built-ins to most shells, but in case of stupidity check anyhow
AC_PATH_PROG(TRUE, true)
AC_PATH_PROG(FALSE, false)
AC_PATH_PROG(TEST, test)

AC_PATH_PROG(RM, rm)
AC_PATH_PROG(TOUCH, touch)
AC_PATH_PROG(CP, cp)
AC_PATH_PROGS(MV, mv cp, $FALSE)
AC_PATH_PROG(MKDIR, mkdir, $FALSE)
AC_PATH_PROG(LS, ls, $FALSE)

AC_PATH_PROG(CAT, cat, $FALSE)
AC_PATH_PROG(BASENAME, basename, $FALSE)

AC_PATH_PROG(SED, sed, $FALSE)
AC_PATH_PROG(PERL, perl, $FALSE)
AC_PATH_PROG(GREP, grep, $FALSE)

AC_PATH_PROG(AR, ar)

AC_PATH_PROG(XML2CONFIG, xml2-config, $FALSE)


# not everybody puts /usr/local/gnu/bin in their PATH
AC_PATH_PROG(BGCC, bgcc, $FALSE, $PATH:/usr/local/gnu/bin)

# Look for PARASOFT directory if $PARASOFT is not found
if test "X$PARASOFT" '=' "X"
then
	if test -d "/usr/local/parasoft"
	then
		export PARASOFT="/usr/local/parasoft"
	fi
fi

if test \! -d $PARASOFT
then
	export PARASOFT=/path/to/nowhere
fi

AC_SUBST(PARASOFT)
AC_PATH_PROG(INSURE, insure, $FALSE, $PATH:$PARASOFT/bin:/usr/local/parasoft/bin)
AC_PATH_PROG(JTEST, jtest, $FALSE, $PATH:$PARASOFT/bin:/usr/local/parasoft/bin:/home/rculling/jtest/bin)

# note - don't use $PATH_SEPARATOR in this file; we always use Cygwin make

# Note RedHat 9 has a non-Sun Java in /usr/bin, so /usr/local should
# be prefixed.  This doesn't allow any way to override the system
# default for new version testing, though...
AC_PATH_PROG(JAVAC, javac, $FALSE, /usr/local/java/jdk/bin:$PATH:/usr/java/jdk/bin)
AC_PATH_PROG(JAR, jar, $FALSE, /usr/local/java/jdk/bin:$PATH:/usr/java/jdk/bin)
AC_PATH_PROG(JAVADOC, javadoc, $FALSE, /usr/local/java/jdk/bin:$PATH:/usr/java/jdk/bin)

AC_PATH_PROG(JHINDEXER, jhindexer, $FALSE, /usr/local/java/bin:$PATH)

AC_PATH_PROG(DOXYGEN, doxygen, $FALSE)
AC_CHECK_PROG(HAVE_DOT, dot, YES, NO)
AC_PATH_PROGS(BROWSER, browser netscape konqueror mozilla iexplore.exe lynx,
	      $FALSE, $PATH:/cygdrive/c/progra~1/intern~1)

AC_PATH_PROG(XREF, xref, $FALSE)

if test "$ac_cv_search_gethostbyname2" = "no"
then
  AC_MSG_WARN([you will not be able to resolve IPv6 names])
fi

AC_DEFINE_UNQUOTED(PATH_SEPARATOR, "$PATH_SEPARATOR")

# test for oracle <TODO>Should be a macro in aclocal.m4</TODO>
echo $ECHO_N "checking for Oracle... $ECHO_C" >&6
if test "" = "${ORACLE_HOME}"; then
  ORACLE_HOME=/proj/oracle; export ORACLE_HOME
fi
if test -x ${ORACLE_HOME}/bin/xml && ${ORACLE_HOME}/bin/xml -h>/dev/null 2>&1
then
  AC_DEFINE(HAVE_ORACLE)
  HAVE_ORACLE=true; export HAVE_ORACLE
  AC_SUBST(ORACLE_HOME)
  echo "${ECHO_T}$ORACLE_HOME" >&6
else
  HAVE_ORACLE=false; export HAVE_ORACLE
  echo "${ECHO_T}no" >&6
fi
AC_SUBST(HAVE_ORACLE)

# <TRICKY>In order for the pattern rule in bkmk/Makefile to work right, all
# files generated by configure from .in files must have exactly *one* . in
# the name (not counting the .in).</TRICKY>

AC_CONFIG_HEADER(libbk_autoconf.h)
AC_CONFIG_FILES(Make.config getcwd.sh)
AC_OUTPUT
